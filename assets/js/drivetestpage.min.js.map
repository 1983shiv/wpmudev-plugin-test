{"version":3,"file":"drivetestpage.min.js","mappings":"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","sources":["webpack://wpmudev-plugin-test/./node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack://wpmudev-plugin-test/external window \"React\"","webpack://wpmudev-plugin-test/./node_modules/react/jsx-runtime.js","webpack://wpmudev-plugin-test/webpack/bootstrap","webpack://wpmudev-plugin-test/external window [\"wp\",\"element\"]","webpack://wpmudev-plugin-test/external window [\"wp\",\"components\"]","webpack://wpmudev-plugin-test/external window [\"wp\",\"i18n\"]","webpack://wpmudev-plugin-test/./src/googledrive-page/main.jsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","module.exports = window[\"React\"];","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","import { createRoot, render, StrictMode, useState, useEffect, createInterpolateElement } from '@wordpress/element';\nimport { Button, TextControl, Spinner, Notice, ProgressBar } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\n\nimport \"./scss/style.scss\"\n\nconst domElement = document.getElementById( window.wpmudevDriveTest.dom_element_id );\n\nconst WPMUDEV_DriveTest = () => {\n    // State management\n    // const [isAuthenticated, setIsAuthenticated] = useState(window.wpmudevDriveTest.authStatus || false);\n    // const [hasCredentials, setHasCredentials] = useState(window.wpmudevDriveTest.hasCredentials || false);\n    // const [showCredentials, setShowCredentials] = useState(!window.wpmudevDriveTest.hasCredentials);\n    const [isAuthenticated, setIsAuthenticated] = useState(Boolean(window.wpmudevDriveTest.authStatus));\n    const [hasCredentials, setHasCredentials] = useState(Boolean(window.wpmudevDriveTest.hasCredentials));\n    const [showCredentials, setShowCredentials] = useState(!Boolean(window.wpmudevDriveTest.hasCredentials));\n\n    const [nextPageToken, setNextPageToken] = useState(null);\n    const [hasMoreFiles, setHasMoreFiles] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [files, setFiles] = useState([]);\n    const [uploadFile, setUploadFile] = useState(null);\n    const [folderName, setFolderName] = useState('');\n    const [notice, setNotice] = useState({ message: '', type: '' });\n    const [credentials, setCredentials] = useState({\n        clientId: '',\n        clientSecret: ''\n    });\n    const [uploadProgress, setUploadProgress] = useState(null);\n    const [authStatusLoading, setAuthStatusLoading] = useState(false);\n\n    // Add this before the component definition:\n    if (window.wpmudevDriveTest && !window.wpmudevDriveTest.restUrl) {\n        window.wpmudevDriveTest.restUrl = window.location.origin + '/wpmudev1/wp-json/';\n        window.wpmudevDriveTest.nonce = window.wpmudevDriveTest.nonce || '';\n    }\n\n    const debugAuthFlow = () => {\n        console.log('=== DEBUG AUTH FLOW ===');\n        console.log('Current URL:', window.location.href);\n        console.log('URL params:', new URLSearchParams(window.location.search));\n        console.log('wpmudevDriveTest object:', window.wpmudevDriveTest);\n        console.log('wpmudevDriveTest.authStatus (raw):', window.wpmudevDriveTest.authStatus);\n        console.log('wpmudevDriveTest.hasCredentials (raw):', window.wpmudevDriveTest.hasCredentials);\n        console.log('Boolean(authStatus):', Boolean(window.wpmudevDriveTest.authStatus));\n        console.log('Boolean(hasCredentials):', Boolean(window.wpmudevDriveTest.hasCredentials));\n        console.log('Is authenticated (state):', isAuthenticated);\n        console.log('Has credentials (state):', hasCredentials);\n        console.log('Show credentials (state):', showCredentials);\n        console.log('=======================');\n    };\n\n    // Call it in useEffect:\n    useEffect(() => {\n        debugAuthFlow();\n        \n        // ADDED: Force state update based on actual values\n        const actualAuthStatus = Boolean(window.wpmudevDriveTest.authStatus);\n        const actualHasCredentials = Boolean(window.wpmudevDriveTest.hasCredentials);\n        \n        console.log('Forcing state update:', {\n            actualAuthStatus,\n            actualHasCredentials,\n            shouldShowCredentials: !actualHasCredentials\n        });\n        \n        setIsAuthenticated(actualAuthStatus);\n        setHasCredentials(actualHasCredentials);\n        setShowCredentials(!actualHasCredentials);\n        \n        // Only check auth status if not already authenticated\n        if (!actualAuthStatus) {\n            checkAuthStatus();\n        }\n    }, []);\n    \n\n\n    // Auto-load files when authenticated\n    useEffect(() => {\n        console.log('isAuthenticated changed to:', isAuthenticated);\n        if (isAuthenticated) {\n            console.log('Loading files because user is authenticated');\n            loadFiles();\n        }\n    }, [isAuthenticated]);\n\n\n    // hook to handle URL parameters on page load:\n    useEffect(() => {\n        // Check for auth success/error parameters in URL\n        const urlParams = new URLSearchParams(window.location.search);\n        const authStatus = urlParams.get('auth');\n        \n        if (authStatus === 'success') {\n            // If this is the popup window, let the script handle it\n            if (window.opener) {\n                return;\n            }\n            \n            // If this is the main window, check auth status\n            setTimeout(() => {\n                checkAuthStatus();\n            }, 500);\n            \n            // Clean up URL\n            const cleanUrl = window.location.pathname + '?page=' + urlParams.get('page');\n            window.history.replaceState({}, document.title, cleanUrl);\n        } else if (authStatus === 'error') {\n            const errorMessage = urlParams.get('message') || __('Authentication failed', 'wpmudev-plugin-test');\n            showNotice(decodeURIComponent(errorMessage), 'error');\n            \n            // Clean up URL\n            const cleanUrl = window.location.pathname + '?page=' + urlParams.get('page');\n            window.history.replaceState({}, document.title, cleanUrl);\n        }\n    }, []);\n\n    /**\n     * Show notice with auto-dismiss\n     */\n    const showNotice = (message, type = 'success') => {\n        setNotice({ message, type });\n        setTimeout(() => setNotice({ message: '', type: '' }), 5000);\n    };\n\n    /**\n     * Check current authentication status\n     */\n    const checkAuthStatus = async () => {\n        console.log('checkAuthStatus called');\n        console.log(window.wpmudevDriveTest);\n        setAuthStatusLoading(true);\n        try {\n            const response = await fetch(`${window.wpmudevDriveTest.restUrl}wpmudev/v1/drive/auth-status`, {\n                method: 'GET',\n                headers: {\n                    'X-WP-Nonce': window.wpmudevDriveTest.nonce,\n                    'Content-Type': 'application/json',\n                },\n            });\n\n            const data = await response.json();\n            console.log('Auth status response:', data);\n            \n            if (data.success) {\n                const newAuthStatus = Boolean(data.authenticated);\n                const newHasCredentials = Boolean(data.has_credentials);\n                \n                console.log('Updating auth status:', {\n                    authenticated: newAuthStatus,\n                    has_credentials: newHasCredentials,\n                    show_credentials: !newHasCredentials\n                });\n                \n                setIsAuthenticated(newAuthStatus);\n                setHasCredentials(newHasCredentials);\n                setShowCredentials(!newHasCredentials);\n            }\n        } catch (error) {\n            console.error('Auth status check failed:', error);\n            showNotice(__('Failed to check authentication status', 'wpmudev-plugin-test'), 'error');\n        } finally {\n            setAuthStatusLoading(false);\n        }\n    };\n\n    /**\n     * Save Google Drive credentials\n     */\n    const handleSaveCredentials = async () => {\n        if (!credentials.clientId.trim() || !credentials.clientSecret.trim()) {\n            showNotice(__('Please fill in both Client ID and Client Secret', 'wpmudev-plugin-test'), 'error');\n            return;\n        }\n\n        setIsLoading(true);\n        try {\n            // FIXED: Use wpmudevDriveTest.restUrl instead of wpApiSettings.root\n            const response = await fetch(`${window.wpmudevDriveTest.restUrl}wpmudev/v1/drive/save-credentials`, {\n                method: 'POST',\n                headers: {\n                    'X-WP-Nonce': window.wpmudevDriveTest.nonce,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    client_id: credentials.clientId,\n                    client_secret: credentials.clientSecret,\n                }),\n            });\n\n            const data = await response.json();\n            \n            if (data.success) {\n                setHasCredentials(true);\n                setShowCredentials(false);\n                showNotice(__('Credentials saved successfully', 'wpmudev-plugin-test'), 'success');\n                \n                // Clear sensitive data from state\n                setCredentials({ clientId: '', clientSecret: '' });\n            } else {\n                showNotice(data.message || __('Failed to save credentials', 'wpmudev-plugin-test'), 'error');\n            }\n        } catch (error) {\n            console.error('Save credentials failed:', error);\n            showNotice(__('Failed to save credentials', 'wpmudev-plugin-test'), 'error');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    /**\n     * Start Google Drive authentication\n     */\n    const handleAuth = async () => {\n        setIsLoading(true);\n        try {\n            const response = await fetch(`${window.wpmudevDriveTest.restUrl}wpmudev/v1/drive/auth`, {\n                method: 'POST',\n                headers: {\n                    'X-WP-Nonce': window.wpmudevDriveTest.nonce,\n                    'Content-Type': 'application/json',\n                },\n            });\n\n            const data = await response.json();\n            \n            if (data.success && data.auth_url) {\n                // Open auth URL in a popup window\n                const popup = window.open(\n                    data.auth_url,\n                    'google_auth',\n                    'width=500,height=600,scrollbars=yes,resizable=yes'\n                );\n\n                // Listen for messages from popup\n                const handleMessage = (event) => {\n                    if (event.data && event.data.type === 'google_auth_success') {\n                        // Remove event listener\n                        window.removeEventListener('message', handleMessage);\n                        \n                        // Close popup if still open\n                        try {\n                            if (popup && !popup.closed) {\n                                popup.close();\n                            }\n                        } catch (e) {\n                            console.log('Could not check popup.closed due to CORP policy');\n                        }\n                        \n                        // Check auth status after popup closes\n                        setTimeout(() => {\n                            checkAuthStatus();\n                        }, 500);\n                        \n                        showNotice(__('Authentication completed successfully', 'wpmudev-plugin-test'), 'success');\n                    }\n                };\n\n                // Add message listener\n                window.addEventListener('message', handleMessage);\n\n                // FIXED: Handle CORP policy for popup checking\n                const checkClosed = setInterval(() => {\n                    try {\n                        if (popup.closed) {\n                            clearInterval(checkClosed);\n                            window.removeEventListener('message', handleMessage);\n                            \n                            // Check auth status after popup closes\n                            setTimeout(() => {\n                                checkAuthStatus();\n                            }, 1000);\n                        }\n                    } catch (e) {\n                        // If we can't check popup.closed due to CORP, rely on message listener only\n                        console.log('Cannot check popup status due to CORP policy, relying on message listener');\n                        // Clear interval after 60 seconds to prevent infinite checking\n                        setTimeout(() => {\n                            clearInterval(checkClosed);\n                            window.removeEventListener('message', handleMessage);\n                        }, 60000);\n                    }\n                }, 1000);\n\n                showNotice(__('Please complete authentication in the popup window', 'wpmudev-plugin-test'), 'info');\n            } else {\n                showNotice(data.message || __('Failed to start authentication', 'wpmudev-plugin-test'), 'error');\n            }\n        } catch (error) {\n            console.error('Auth failed:', error);\n            showNotice(__('Authentication failed', 'wpmudev-plugin-test'), 'error');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    /**\n     * Load files from Google Drive\n     */\n    const loadFiles = async (pageToken = null, append = false) => {\n        setIsLoading(true);\n        try {\n            const params = new URLSearchParams({\n                page_size: 20,\n                query: 'trashed=false'\n            });\n            \n            if (pageToken) {\n                params.append('page_token', pageToken);\n            }\n\n            const response = await fetch(`${window.wpmudevDriveTest.restUrl}wpmudev/v1/drive/files?${params.toString()}`, {\n                method: 'GET',\n                headers: {\n                    'X-WP-Nonce': window.wpmudevDriveTest.nonce,\n                    'Content-Type': 'application/json',\n                },\n            });\n\n            const data = await response.json();\n            \n            if (data.success) {\n                // Either replace files or append to existing files\n                if (append) {\n                    setFiles(prevFiles => [...prevFiles, ...(data.files || [])]);\n                } else {\n                    setFiles(data.files || []);\n                }\n                \n                // Handle pagination\n                if (data.pagination) {\n                    setHasMoreFiles(data.pagination.hasNextPage);\n                    setNextPageToken(data.pagination.nextPageToken);\n                } else {\n                    setHasMoreFiles(false);\n                    setNextPageToken(null);\n                }\n            } else {\n                showNotice(data.message || __('Failed to load files', 'wpmudev-plugin-test'), 'error');\n            }\n        } catch (error) {\n            console.error('Load files failed:', error);\n            showNotice(__('Failed to load files', 'wpmudev-plugin-test'), 'error');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    // Add this function for loading more files:\n    const loadMoreFiles = () => {\n        if (nextPageToken && hasMoreFiles) {\n            loadFiles(nextPageToken, true); // true = append to existing files\n        }\n    };\n\n    /**\n     * Upload file to Google Drive\n     */\n    const handleUpload = async () => {\n        if (!uploadFile) {\n            showNotice(__('Please select a file to upload', 'wpmudev-plugin-test'), 'error');\n            return;\n        }\n\n        // Validate file size (100MB limit)\n        const maxSize = 100 * 1024 * 1024; // 100MB\n        if (uploadFile.size > maxSize) {\n            showNotice(__('File size exceeds 100MB limit', 'wpmudev-plugin-test'), 'error');\n            return;\n        }\n\n        setIsLoading(true);\n        setUploadProgress({ progress: 0, message: __('Starting upload...', 'wpmudev-plugin-test') });\n\n        try {\n            const formData = new FormData();\n            formData.append('file', uploadFile);\n\n            // FIXED: Use wpmudevDriveTest.restUrl instead of wpApiSettings.root\n            const response = await fetch(`${window.wpmudevDriveTest.restUrl}wpmudev/v1/drive/upload`, {\n                method: 'POST',\n                headers: {\n                    'X-WP-Nonce': window.wpmudevDriveTest.nonce,\n                },\n                body: formData,\n            });\n\n            const data = await response.json();\n            \n            if (data.success) {\n                setUploadFile(null);\n                // Clear file input\n                const fileInput = document.querySelector('.drive-file-input');\n                if (fileInput) fileInput.value = '';\n                \n                showNotice(\n                    __('File uploaded successfully: %s', 'wpmudev-plugin-test').replace('%s', data.file.name),\n                    'success'\n                );\n                \n                // Show upload progress details\n                if (data.upload_progress && data.upload_progress.stages) {\n                    setUploadProgress({\n                        progress: 100,\n                        message: __('Upload completed successfully', 'wpmudev-plugin-test'),\n                        stages: data.upload_progress.stages\n                    });\n                }\n                \n                // Reload files list\n                loadFiles();\n            } else {\n                showNotice(data.message || __('Upload failed', 'wpmudev-plugin-test'), 'error');\n                \n                // Show upload progress error details\n                if (data.upload_progress) {\n                    setUploadProgress({\n                        progress: 0,\n                        message: data.upload_progress.message || __('Upload failed', 'wpmudev-plugin-test'),\n                        error: true\n                    });\n                }\n            }\n        } catch (error) {\n            console.error('Upload failed:', error);\n            showNotice(__('Upload failed', 'wpmudev-plugin-test'), 'error');\n            setUploadProgress({\n                progress: 0,\n                message: __('Upload failed', 'wpmudev-plugin-test'),\n                error: true\n            });\n        } finally {\n            setIsLoading(false);\n            // Clear upload progress after 3 seconds\n            setTimeout(() => setUploadProgress(null), 3000);\n        }\n    };\n\n    /**\n     * Download file from Google Drive\n     */\n    const handleDownload = async (fileId, fileName) => {\n        try {\n            const response = await fetch(`${window.wpmudevDriveTest.restUrl}wpmudev/v1/drive/files/${fileId}/download`, {\n                method: 'GET',\n                headers: {\n                    'X-WP-Nonce': window.wpmudevDriveTest.nonce,\n                },\n            });\n\n            const data = await response.json();\n            \n            if (data.success && data.file.content) {\n                // Convert base64 to blob and download\n                const byteCharacters = atob(data.file.content);\n                const byteNumbers = new Array(byteCharacters.length);\n                for (let i = 0; i < byteCharacters.length; i++) {\n                    byteNumbers[i] = byteCharacters.charCodeAt(i);\n                }\n                const byteArray = new Uint8Array(byteNumbers);\n                const blob = new Blob([byteArray], { type: data.file.mimeType });\n\n                // Create download link\n                const url = window.URL.createObjectURL(blob);\n                const link = document.createElement('a');\n                link.href = url;\n                link.download = fileName;\n                document.body.appendChild(link);\n                link.click();\n                window.URL.revokeObjectURL(url);\n                document.body.removeChild(link);\n\n                showNotice(__('File downloaded successfully', 'wpmudev-plugin-test'), 'success');\n            } else {\n                showNotice(data.message || __('Download failed', 'wpmudev-plugin-test'), 'error');\n            }\n        } catch (error) {\n            console.error('Download failed:', error);\n            showNotice(__('Download failed', 'wpmudev-plugin-test'), 'error');\n        }\n    };\n\n    /**\n     * Create new folder in Google Drive\n     */\n    const handleCreateFolder = async () => {\n        if (!folderName.trim()) {\n            showNotice(__('Please enter a folder name', 'wpmudev-plugin-test'), 'error');\n            return;\n        }\n\n        setIsLoading(true);\n        try {\n            const response = await fetch(`${window.wpmudevDriveTest.restUrl}wpmudev/v1/drive/create-folder`, {\n                method: 'POST',\n                headers: {\n                    'X-WP-Nonce': window.wpmudevDriveTest.nonce,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    name: folderName.trim(),\n                }),\n            });\n\n            const data = await response.json();\n            \n            if (data.success) {\n                setFolderName('');\n                showNotice(\n                    __('Folder created successfully: %s', 'wpmudev-plugin-test').replace('%s', data.folder.name),\n                    'success'\n                );\n                \n                // Reload files list\n                loadFiles();\n            } else {\n                showNotice(data.message || __('Failed to create folder', 'wpmudev-plugin-test'), 'error');\n            }\n        } catch (error) {\n            console.error('Create folder failed:', error);\n            showNotice(__('Failed to create folder', 'wpmudev-plugin-test'), 'error');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    /**\n     * Format file size for display\n     */\n    const formatFileSize = (bytes) => {\n        if (!bytes) return '';\n        const sizes = ['B', 'KB', 'MB', 'GB'];\n        const i = Math.floor(Math.log(bytes) / Math.log(1024));\n        return Math.round(bytes / Math.pow(1024, i) * 100) / 100 + ' ' + sizes[i];\n    };\n\n    /**\n     * Determine file type for display\n     */\n    const getFileType = (mimeType) => {\n        if (mimeType === 'application/vnd.google-apps.folder') {\n            return __('Folder', 'wpmudev-plugin-test');\n        } else if (mimeType.startsWith('image/')) {\n            return __('Image', 'wpmudev-plugin-test');\n        } else if (mimeType.startsWith('video/')) {\n            return __('Video', 'wpmudev-plugin-test');\n        } else if (mimeType.startsWith('audio/')) {\n            return __('Audio', 'wpmudev-plugin-test');\n        } else if (mimeType.includes('pdf')) {\n            return __('PDF', 'wpmudev-plugin-test');\n        } else if (mimeType.includes('document') || mimeType.includes('word')) {\n            return __('Document', 'wpmudev-plugin-test');\n        } else if (mimeType.includes('spreadsheet') || mimeType.includes('excel')) {\n            return __('Spreadsheet', 'wpmudev-plugin-test');\n        } else if (mimeType.includes('presentation') || mimeType.includes('powerpoint')) {\n            return __('Presentation', 'wpmudev-plugin-test');\n        } else {\n            return __('File', 'wpmudev-plugin-test');\n        }\n    };\n\n    // Loading state during initial auth check\n    if (authStatusLoading) {\n        return (\n            <div className=\"sui-wrap\">\n                <div className=\"sui-header\">\n                    <h1 className=\"sui-header-title\">\n                        {__('Google Drive Test', 'wpmudev-plugin-test')}\n                    </h1>\n                    <p className=\"sui-description\">\n                        {__('Test Google Drive API integration for applicant assessment', 'wpmudev-plugin-test')}\n                    </p>\n                </div>\n                <div className=\"sui-box\">\n                    <div className=\"sui-box-body\">\n                        <div className=\"drive-loading\">\n                            <Spinner />\n                            <p>{__('Checking authentication status...', 'wpmudev-plugin-test')}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"sui-wrap\">\n            <div className=\"sui-header\">\n                <h1 className=\"sui-header-title\">\n                    {__('Google Drive Test', 'wpmudev-plugin-test')}\n                </h1>\n                <p className=\"sui-description\">\n                    {__('Test Google Drive API integration for applicant assessment', 'wpmudev-plugin-test')}\n                </p>\n            </div>\n\n            {notice.message && (\n                <Notice status={notice.type} isDismissible onRemove={() => setNotice({ message: '', type: '' })}>\n                    {notice.message}\n                </Notice>\n            )}\n\n            {/* Credentials Setup */}\n            {showCredentials ? (\n                <div className=\"sui-box\">\n                    <div className=\"sui-box-header\">\n                        <h2 className=\"sui-box-title\">\n                            {__('Set Google Drive Credentials', 'wpmudev-plugin-test')}\n                        </h2>\n                    </div>\n                    <div className=\"sui-box-body\">\n                        <div className=\"sui-box-settings-row\">\n                            <TextControl\n                                help={createInterpolateElement(\n                                    __('You can get Client ID from <a>Google Cloud Console</a>. Make sure to enable Google Drive API.', 'wpmudev-plugin-test'),\n                                    {\n                                        a: <a href=\"https://console.cloud.google.com/apis/credentials\" target=\"_blank\" rel=\"noopener noreferrer\" />,\n                                    }\n                                )}\n                                label={__('Client ID', 'wpmudev-plugin-test')}\n                                value={credentials.clientId}\n                                onChange={(value) => setCredentials({...credentials, clientId: value})}\n                                placeholder={__('Enter your Google Client ID', 'wpmudev-plugin-test')}\n                            />\n                        </div>\n\n                        <div className=\"sui-box-settings-row\">\n                            <TextControl\n                                help={createInterpolateElement(\n                                    __('You can get Client Secret from <a>Google Cloud Console</a>.', 'wpmudev-plugin-test'),\n                                    {\n                                        a: <a href=\"https://console.cloud.google.com/apis/credentials\" target=\"_blank\" rel=\"noopener noreferrer\" />,\n                                    }\n                                )}\n                                label={__('Client Secret', 'wpmudev-plugin-test')}\n                                value={credentials.clientSecret}\n                                onChange={(value) => setCredentials({...credentials, clientSecret: value})}\n                                type=\"password\"\n                                placeholder={__('Enter your Google Client Secret', 'wpmudev-plugin-test')}\n                            />\n                        </div>\n\n                        <div className=\"sui-box-settings-row\">\n                            <div className=\"sui-notice sui-notice-info\">\n                                <div className=\"sui-notice-content\">\n                                    <div className=\"sui-notice-message\">\n                                        <span className=\"sui-notice-icon sui-icon-info\" aria-hidden=\"true\"></span>\n                                        <p>\n                                            {__('Please use this URL in your Google API\\'s Authorized redirect URIs field:', 'wpmudev-plugin-test')}\n                                        </p>\n                                        <p>\n                                            <code style={{wordBreak: 'break-all', fontSize: '12px', display: 'block', padding: '8px', backgroundColor: '#f8f9fa', border: '1px solid #ddd'}}>\n                                                {window.wpmudevDriveTest.redirectUri}\n                                            </code>\n                                        </p>\n                                        <p>\n                                            <small>\n                                                {__('Copy this URL exactly as shown and add it to your Google Cloud Console project\\'s OAuth 2.0 Client IDs configuration.', 'wpmudev-plugin-test')}\n                                            </small>\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"sui-box-settings-row\">\n                            <p><strong>{__('Required scopes for Google Drive API:', 'wpmudev-plugin-test')}</strong></p>\n                            <ul>\n                                <li><code>https://www.googleapis.com/auth/drive.file</code></li>\n                                <li><code>https://www.googleapis.com/auth/drive.readonly</code></li>\n                            </ul>\n                        </div>\n                    </div>\n                    <div className=\"sui-box-footer\">\n                        <div className=\"sui-actions-right\">\n                            <Button\n                                variant=\"primary\"\n                                onClick={handleSaveCredentials}\n                                disabled={isLoading || !credentials.clientId.trim() || !credentials.clientSecret.trim()}\n                            >\n                                {isLoading ? <Spinner /> : __('Save Credentials', 'wpmudev-plugin-test')}\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            ) : !isAuthenticated ? (\n                /* Authentication Section */\n                <div className=\"sui-box\">\n                    <div className=\"sui-box-header\">\n                        <h2 className=\"sui-box-title\">\n                            {__('Authenticate with Google Drive', 'wpmudev-plugin-test')}\n                        </h2>\n                    </div>\n                    <div className=\"sui-box-body\">\n                        <div className=\"sui-box-settings-row\">\n                            <p>{__('Please authenticate with Google Drive to proceed with the test.', 'wpmudev-plugin-test')}</p>\n                            <p><strong>{__('This test will require the following permissions:', 'wpmudev-plugin-test')}</strong></p>\n                            <ul>\n                                <li>{__('View and manage Google Drive files', 'wpmudev-plugin-test')}</li>\n                                <li>{__('Upload new files to Drive', 'wpmudev-plugin-test')}</li>\n                                <li>{__('Create folders in Drive', 'wpmudev-plugin-test')}</li>\n                            </ul>\n                        </div>\n                    </div>\n                    <div className=\"sui-box-footer\">\n                        <div className=\"sui-actions-left\">\n                            <Button\n                                variant=\"secondary\"\n                                onClick={() => setShowCredentials(true)}\n                            >\n                                {__('Change Credentials', 'wpmudev-plugin-test')}\n                            </Button>\n                        </div>\n                        <div className=\"sui-actions-right\">\n                            <Button\n                                variant=\"primary\"\n                                onClick={handleAuth}\n                                disabled={isLoading}\n                            >\n                                {isLoading ? <Spinner /> : __('Authenticate with Google Drive', 'wpmudev-plugin-test')}\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            ) : (\n                /* Authenticated State - Main Interface */\n                <>\n                    {/* File Upload Section */}\n                    <div className=\"sui-box\">\n                        <div className=\"sui-box-header\">\n                            <h2 className=\"sui-box-title\">\n                                {__('Upload File to Drive', 'wpmudev-plugin-test')}\n                            </h2>\n                        </div>\n                        <div className=\"sui-box-body\">\n                            <div className=\"sui-box-settings-row\">\n                                <label className=\"sui-label\">\n                                    {__('Select File', 'wpmudev-plugin-test')}\n                                </label>\n                                <input\n                                    type=\"file\"\n                                    onChange={(e) => setUploadFile(e.target.files[0])}\n                                    className=\"drive-file-input\"\n                                    accept=\"*/*\"\n                                />\n                                {uploadFile && (\n                                    <div className=\"sui-description\">\n                                        <strong>{__('Selected:', 'wpmudev-plugin-test')}</strong> {uploadFile.name} ({formatFileSize(uploadFile.size)})\n                                    </div>\n                                )}\n                            </div>\n                            \n                            {uploadProgress && (\n                                <div className=\"sui-box-settings-row\">\n                                    <div className=\"upload-progress\">\n                                        <p><strong>{__('Upload Progress:', 'wpmudev-plugin-test')}</strong></p>\n                                        <ProgressBar value={uploadProgress.progress} />\n                                        <p className={uploadProgress.error ? 'error' : 'success'}>\n                                            {uploadProgress.message}\n                                        </p>\n                                        {uploadProgress.stages && (\n                                            <details>\n                                                <summary>{__('View Details', 'wpmudev-plugin-test')}</summary>\n                                                <ul>\n                                                    {uploadProgress.stages.map((stage, index) => (\n                                                        <li key={index}>\n                                                            <strong>{stage.stage}:</strong> {stage.message} ({stage.progress}%)\n                                                        </li>\n                                                    ))}\n                                                </ul>\n                                            </details>\n                                        )}\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                        <div className=\"sui-box-footer\">\n                            <div className=\"sui-actions-right\">\n                                <Button\n                                    variant=\"primary\"\n                                    onClick={handleUpload}\n                                    disabled={isLoading || !uploadFile}\n                                >\n                                    {isLoading ? <Spinner /> : __('Upload to Drive', 'wpmudev-plugin-test')}\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n\n                    {/* Create Folder Section */}\n                    <div className=\"sui-box\">\n                        <div className=\"sui-box-header\">\n                            <h2 className=\"sui-box-title\">\n                                {__('Create New Folder', 'wpmudev-plugin-test')}\n                            </h2>\n                        </div>\n                        <div className=\"sui-box-body\">\n                            <div className=\"sui-box-settings-row\">\n                                <TextControl\n                                    label={__('Folder Name', 'wpmudev-plugin-test')}\n                                    value={folderName}\n                                    onChange={setFolderName}\n                                    placeholder={__('Enter folder name', 'wpmudev-plugin-test')}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"sui-box-footer\">\n                            <div className=\"sui-actions-right\">\n                                <Button\n                                    variant=\"secondary\"\n                                    onClick={handleCreateFolder}\n                                    disabled={isLoading || !folderName.trim()}\n                                >\n                                    {isLoading ? <Spinner /> : __('Create Folder', 'wpmudev-plugin-test')}\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n\n                    {/* Files List Section */}\n                    <div className=\"sui-box\">\n                        <div className=\"sui-box-header\">\n                            <h2 className=\"sui-box-title\">\n                                {__('Your Drive Files', 'wpmudev-plugin-test')}\n                            </h2>\n                            <div className=\"sui-actions-right\">\n                                <Button\n                                    variant=\"secondary\"\n                                    onClick={loadFiles}\n                                    disabled={isLoading}\n                                    size=\"small\"\n                                >\n                                    {isLoading ? <Spinner /> : __('Refresh Files', 'wpmudev-plugin-test')}\n                                </Button>\n                            </div>\n                        </div>\n                        <div className=\"sui-box-body\">\n                            {isLoading ? (\n                                <div className=\"drive-loading\">\n                                    <Spinner />\n                                    <p>{__('Loading files...', 'wpmudev-plugin-test')}</p>\n                                </div>\n                            ) : files.length > 0 ? (\n                                <div className=\"drive-files-grid\">\n                                    {files.map((file) => (\n                                        <div key={file.id} className={`drive-file-item ${file.isFolder ? 'is-folder' : 'is-file'}`}>\n                                            <div className=\"file-info\">\n                                                <div className=\"file-name\">\n                                                    <strong>{file.name}</strong>\n                                                    <span className=\"file-type\">{getFileType(file.mimeType)}</span>\n                                                </div>\n                                                <div className=\"file-meta\">\n                                                    {file.size && (\n                                                        <span className=\"file-size\">{formatFileSize(file.size)}</span>\n                                                    )}\n                                                    <span className=\"file-date\">\n                                                        {file.modifiedTime \n                                                            ? new Date(file.modifiedTime).toLocaleDateString()\n                                                            : __('Unknown date', 'wpmudev-plugin-test')\n                                                        }\n                                                    </span>\n                                                </div>\n                                            </div>\n                                            <div className=\"file-actions\">\n                                                {file.webViewLink && (\n                                                    <Button\n                                                        variant=\"link\"\n                                                        size=\"small\"\n                                                        href={file.webViewLink}\n                                                        target=\"_blank\"\n                                                        rel=\"noopener noreferrer\"\n                                                    >\n                                                        {__('View in Drive', 'wpmudev-plugin-test')}\n                                                    </Button>\n                                                )}\n                                                {!file.isFolder && (\n                                                    <Button\n                                                        variant=\"secondary\"\n                                                        size=\"small\"\n                                                        onClick={() => handleDownload(file.id, file.name)}\n                                                    >\n                                                        {__('Download', 'wpmudev-plugin-test')}\n                                                    </Button>\n                                                )}\n                                            </div>\n                                        </div>\n                                    ))}\n                                </div>\n                            ) : (\n                                <div className=\"sui-box-settings-row\">\n                                    <div className=\"sui-notice\">\n                                        <div className=\"sui-notice-content\">\n                                            <div className=\"sui-notice-message\">\n                                                <span className=\"sui-notice-icon sui-icon-info\" aria-hidden=\"true\"></span>\n                                                <p>{__('No files found in your Drive. Upload a file or create a folder to get started.', 'wpmudev-plugin-test')}</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n\n                    {hasMoreFiles && (\n                        <div className=\"sui-box-footer\">\n                            <div className=\"sui-actions-center\">\n                                <Button\n                                    variant=\"secondary\"\n                                    onClick={loadMoreFiles}\n                                    disabled={isLoading}\n                                >\n                                    {isLoading ? <Spinner /> : __('Load More Files', 'wpmudev-plugin-test')}\n                                </Button>\n                            </div>\n                        </div>\n                    )}\n                </>\n            )}\n        </div>\n    );\n}\n\nif ( createRoot ) {\n    createRoot( domElement ).render(<StrictMode><WPMUDEV_DriveTest/></StrictMode>);\n} else {\n    render( <StrictMode><WPMUDEV_DriveTest/></StrictMode>, domElement );\n}"],"names":["f","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","exports","Fragment","jsx","jsxs","module","window","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","t","r","iterator","o","toStringTag","i","Generator","u","create","_regeneratorDefine2","y","G","v","bind","length","TypeError","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","defineProperty","_invoke","enumerable","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_slicedToArray","Array","isArray","_arrayWithHoles","next","push","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_arrayLikeToArray","toString","slice","constructor","name","from","test","domElement","document","getElementById","wpmudevDriveTest","dom_element_id","WPMUDEV_DriveTest","_useState2","useState","Boolean","authStatus","isAuthenticated","setIsAuthenticated","_useState4","hasCredentials","setHasCredentials","_useState6","showCredentials","setShowCredentials","_useState8","nextPageToken","setNextPageToken","_useState0","hasMoreFiles","setHasMoreFiles","_useState10","isLoading","setIsLoading","_useState12","files","setFiles","_useState14","uploadFile","setUploadFile","_useState16","folderName","setFolderName","_useState18","message","notice","setNotice","_useState20","clientId","clientSecret","credentials","setCredentials","_useState22","uploadProgress","setUploadProgress","_useState24","authStatusLoading","setAuthStatusLoading","restUrl","location","origin","nonce","useEffect","console","log","href","URLSearchParams","search","actualAuthStatus","actualHasCredentials","shouldShowCredentials","checkAuthStatus","loadFiles","urlParams","get","opener","setTimeout","cleanUrl","pathname","history","replaceState","title","errorMessage","__","showNotice","decodeURIComponent","_cleanUrl","_ref","_callee","response","data","newAuthStatus","newHasCredentials","_t","_context","fetch","concat","method","headers","json","success","authenticated","has_credentials","show_credentials","error","handleSaveCredentials","_ref2","_callee2","_t2","_context2","trim","body","JSON","stringify","client_id","client_secret","handleAuth","_ref3","_callee3","popup","_handleMessage","checkClosed","_t3","_context3","auth_url","open","event","removeEventListener","closed","close","addEventListener","setInterval","clearInterval","_ref4","_callee4","pageToken","append","params","_t4","_args4","_context4","page_size","query","prevFiles","_toConsumableArray","pagination","hasNextPage","handleUpload","_ref5","_callee5","formData","fileInput","_t5","_context5","size","progress","FormData","querySelector","replace","file","upload_progress","stages","handleDownload","_ref6","_callee6","fileId","fileName","byteCharacters","byteNumbers","byteArray","blob","url","link","_t6","_context6","content","atob","charCodeAt","Uint8Array","Blob","mimeType","URL","createObjectURL","createElement","download","appendChild","click","revokeObjectURL","removeChild","_x","_x2","handleCreateFolder","_ref7","_callee7","_t7","_context7","folder","formatFileSize","bytes","Math","floor","round","pow","_jsxs","className","children","_jsx","Spinner","Notice","status","isDismissible","onRemove","TextControl","help","createInterpolateElement","target","rel","label","onChange","_objectSpread","placeholder","style","wordBreak","fontSize","display","padding","backgroundColor","border","redirectUri","Button","variant","onClick","disabled","_Fragment","accept","ProgressBar","map","stage","index","isFolder","startsWith","includes","modifiedTime","Date","toLocaleDateString","webViewLink","id","createRoot","render","StrictMode"],"sourceRoot":""}